#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };

    quickpause {
      bindings = <&kp C_PLAY_PAUSE>;
      key-positions = <15 20>;
    };

    escape {
      bindings = <&kp ESCAPE>;
      key-positions = <19 20>;
    };

    colemakdh {
      bindings = <&tog 0>;
      key-positions = <18 12 23 17>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp C_PP    &kp Q           &kp W       &kp E         &kp R               &kp T                   &kp Y      &kp U                &kp I                 &kp O       &kp P               &kp LG(LA(DEL))
&kp C_NEXT  &hm LEFT_GUI A  &hm LALT S  &hm LSHIFT D  &hm LEFT_CONTROL F  &kp G                   &kp H      &hm RIGHT_CONTROL J  &hm RSHIFT K          &hm RALT L  &hm RGUI LS(COMMA)  &kp LS(PERIOD)
&kp C_PREV  &kp Z           &kp X       &kp C         &kp V               &kp B                   &kp N      &kp M                &kp COMMA             &kp DOT     &kp LS(NUMBER_7)    &kp LG(LA(K))
                                        &kp TAB       &mo 1               &hm LEFT_CONTROL SPACE  &kp ENTER  &mo 2                &hm LSHIFT BACKSPACE
      >;
    };

    numbersNnav {
      bindings = <
&trans  &trans           &kp N7                 &kp N8                   &kp N9                     &trans       &trans          &kp HOME  &kp END        &trans     &trans  &trans
&trans  &hm LEFT_GUI N0  &hm LEFT_ALT NUMBER_1  &hm LEFT_SHIFT NUMBER_2  &hm LEFT_CONTROL NUMBER_3  &trans       &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW   &kp RIGHT  &trans  &trans
&trans  &trans           &kp N4                 &kp N5                   &kp N6                     &trans       &trans          &trans    &trans         &trans     &trans  &trans
                                                &trans                   &trans                     &bootloader  &trans          &mo 3     &kp BACKSPACE
      >;

      label = "num";
    };

    symbols {
      bindings = <
&none  &kp LS(NUMBER_1)      &kp RA(NUMBER_2)  &kp HASH          &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp PIPE          &kp LS(NUMBER_6)  &kp LEFT_BRACE     &kp LS(NUMBER_0)  &kp LS(MINUS)             &trans
&none  &kp NON_US_BACKSLASH  &kp RA(NUMBER_8)  &kp RA(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(SLASH)     &kp SLASH         &kp LS(NUMBER_9)  &kp RA(NUMBER_0)   &kp RA(N9)        &kp LS(NON_US_BACKSLASH)  &kp RIGHT_BRACKET
&none  &trans                &kp MINUS         &kp SEMICOLON     &trans            &kp GRAVE         &kp LEFT_BRACKET  &kp AT_SIGN       &kp DOUBLE_QUOTES  &trans            &kp TILDE                 &kp BACKSLASH
                                               &trans            &trans            &trans            &bootloader       &trans            &trans
      >;
    };

    both {
      bindings = <
&none  &none             &none           &kp LG(LS(S))      &none         &bt BT_SEL 0  &bt BT_SEL 3  &none               &none  &none      &none  &rgb_ug RGB_COLOR_HSB(0,60,50)
&none  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT         &none         &bt BT_SEL 1  &bt BT_SEL 4  &kp LS(LC(ESCAPE))  &none  &kp LG(L)  &none  &rgb_ug RGB_COLOR_HSB(120,60,50)
&none  &none             &kp C_MUTE      &kp C_VOLUME_DOWN  &kp C_VOL_UP  &bt BT_SEL 2  &bt BT_CLR    &kp LG(TAB)         &none  &none      &none  &rgb_ug RGB_COLOR_HSB(240,60,50)
                                         &none              &none         &none         &none         &none               &none
      >;
    };
  };
};
